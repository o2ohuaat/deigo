// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_SERVERMSGRESPONSE_MSG_RESPONSE_H_
#define FLATBUFFERS_GENERATED_SERVERMSGRESPONSE_MSG_RESPONSE_H_

#include "flatbuffers.h"

namespace Msg {
namespace Response {

struct Body;

struct Body FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_STATUS = 4,
    VT_MESSAGE = 6
  };
  uint8_t status() const { return GetField<uint8_t>(VT_STATUS, 0); }
  const flatbuffers::String *message() const { return GetPointer<const flatbuffers::String *>(VT_MESSAGE); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<uint8_t>(verifier, VT_STATUS) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_MESSAGE) &&
           verifier.Verify(message()) &&
           verifier.EndTable();
  }
};

struct BodyBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_status(uint8_t status) { fbb_.AddElement<uint8_t>(Body::VT_STATUS, status, 0); }
  void add_message(flatbuffers::Offset<flatbuffers::String> message) { fbb_.AddOffset(Body::VT_MESSAGE, message); }
  BodyBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  BodyBuilder &operator=(const BodyBuilder &);
  flatbuffers::Offset<Body> Finish() {
    auto o = flatbuffers::Offset<Body>(fbb_.EndTable(start_, 2));
    return o;
  }
};

inline flatbuffers::Offset<Body> CreateBody(flatbuffers::FlatBufferBuilder &_fbb,
   uint8_t status = 0,
   flatbuffers::Offset<flatbuffers::String> message = 0) {
  BodyBuilder builder_(_fbb);
  builder_.add_message(message);
  builder_.add_status(status);
  return builder_.Finish();
}

inline const Msg::Response::Body *GetBody(const void *buf) { return flatbuffers::GetRoot<Msg::Response::Body>(buf); }

inline bool VerifyBodyBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<Msg::Response::Body>(); }

inline void FinishBodyBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<Msg::Response::Body> root) { fbb.Finish(root); }

}  // namespace Response
}  // namespace Msg

#endif  // FLATBUFFERS_GENERATED_SERVERMSGRESPONSE_MSG_RESPONSE_H_
